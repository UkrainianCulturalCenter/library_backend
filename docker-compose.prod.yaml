services:
 api:
   build:
     context: .
   env_file:
     - .env
   expose:
     - 8000
   command: >
      sh -c "python db/wait_db.py &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            gunicorn --bind 0.0.0.0:8000 library.wsgi
            "
   volumes:
     - /Users/kostyantynzivenko/Desktop/my_experiments/UCC/library_backend:/app
   depends_on:
     - db

 db:
   image: postgres:16-alpine3.19
   restart: always
   env_file:
     - .env
   volumes:
     - my_db:${PGDATA}

 nginx:
   build: ./nginx
   volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
     - ./nginx/cert.pem:/etc/cert.pem
     - ./nginx/key.pem:/etc/key.pem
   ports:
     - 80:80
     - 443:443
   command: [ nginx-debug, '-g', 'daemon off;' ]
   depends_on:
     - api

 certbot:
   build:
     context: ./certbot
     dockerfile: Dockerfile
     args:
       DOMAIN_EMAIL: ${DOMAIN_EMAIL}
       DOMAIN_URL: ${DOMAIN_URL}
   ports:
     - "6000:80"
   env_file:
     - .env
   volumes:
     - ./nginx/:/etc/nginx/
   depends_on:
     - nginx

volumes:
  my_db: